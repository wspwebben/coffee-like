{"version":3,"sources":["styles/_globals.scss","styles/_base-colors.scss","styles/blocks/_button.scss","styles/blocks/_tag.scss","styles/blocks/_prop-list.scss","styles/blocks/_field-label.scss","styles/_colors.scss","styles/blocks/_rating.scss","styles/blocks/_comments.scss","styles/blocks/_select.scss","styles/blocks/_counter.scss","styles/blocks/_product-list.scss","styles/blocks/_product-card.scss","styles/mixins/_media.scss"],"names":[],"mappings":"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","file":"styles.e9dd7051.css","sourceRoot":"..","sourcesContent":["@use 'colors';\n\n$bg-color: colors.$background;\n$text-color: colors.$text;\n\n*, *::before, *::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 100%;\n  height: 100%;\n  background-color: $bg-color;\n  color: $text-color;\n  font-family: \"Avenir\", \"Arial\", sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-size-adjust: 100%;\n}\n\nbody {\n  height: 100%;\n  margin: 0;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n\nimg {\n  display: block;\n  max-width: 100%;\n  height: auto;\n}\n\nul, ol {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\nbutton {\n  font: inherit;\n}\n","$green: #45cd91;\n$dark-green: #00a75d;\n$light-green: #b3e5ce;\n\n$blue: #4659ff;\n$light-blue: #757aff;\n\n$orange: #ff9446;\n$light-orange: #ffb077;\n\n$red: #bb1600;\n\n$black: #101010;\n$white: #ffffff;\n$dark-white: #e5e5e5;\n\n$gray: #cfcfcf;\n","@use '../colors';\n\n$padding: 12px;\n$border-width: 2px;\n$border-color: transparent;\n$text-color: colors.$text-contrast;\n$background: colors.gradient('green');\n$shadow-hover-color: rgba(colors.$dark, 0.2);\n\n$invert-border-color: rgba(colors.$primary, 0.1);\n$invert-text-color: colors.$primary;\n$invert-background: transparent;\n$invert-hover-background: $background;\n\n$disabled-border-color: transparent;\n$disabled-text-color: colors.$disabled;\n$disabled-background: transparent;\n$disabled-hover-background: transparent;\n\n@mixin default_button() {\n  padding: $padding;\n  border: 0;\n  color: $text-color;\n  background: $background;\n}\n\n.button {\n  display: inline-block;\n  \n  border-radius: 5px;\n  fill: currentColor;\n  cursor: pointer;\n  @include default_button();\n\n  &:hover,\n  &:focus {\n    box-shadow: inset 0 -10px 20px $shadow-hover-color;\n  }\n\n  &:active {\n    box-shadow: inset 0 0px 10px $shadow-hover-color;\n  }\n\n  &--invert {\n    padding: $padding - $border-width;\n    border: $border-width solid $invert-border-color;\n    color: $invert-text-color;\n    background: $invert-background;\n\n    &:hover,\n    &:focus {\n      @include default_button();\n    }\n  }\n\n  &--round {\n    border-radius: 50%;\n  }\n\n  &:disabled {\n    color: $disabled-text-color;\n    border-color: $disabled-border-color;\n    background: $disabled-background;\n\n    &:hover,\n    &:focus {\n      background: $disabled-hover-background;\n    }\n  }\n}\n","@use 'sass:list';\n@use '../colors';\n\n$text-color: colors.$text-contrast;\n$colors: ('green', 'orange', 'blue');\n\n$edge-space: 10px;\n\n.tag {\n  position: relative;\n  padding: 5px $edge-space;\n  padding-right: $edge-space;\n  background-color: colors.$primary;\n  color: $text-color;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    left: 100%;\n    top: 0;\n    bottom: 0;\n    width: $edge-space;\n    height: 100%;\n    background-position: 100%;\n    clip-path: polygon(100% 0, 0 50%, 100% 100%, 0 100%, 0 0);\n  }\n\n  @each $color in $colors {\n    \n    &--#{$color} {\n      background-image: colors.gradient($color, 90deg);\n\n      &::after {\n        background-color: colors.get-gradient-color($color, 'end');\n      }\n    }\n  }\n}\n","@use '../colors';\n\n$bar-color: colors.$support;\n$bar-active-color: colors.$primary;\n\n$gap: 20px;\n\n.prop-list {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  margin-right: -$gap;\n  margin-bottom: -$gap;\n  // gap: $gap;\n\n  &__item {\n    margin-right: $gap;\n    margin-bottom: $gap;\n  }\n\n  &__value {\n    display: flex;\n    margin: 0;\n    margin-bottom: 6px;\n  }\n\n  &__bar {\n    width: 17px;\n    height: 3px;\n    background-color: $bar-color;\n    border-radius: 2px;\n\n    &--active {\n      background-color: $bar-active-color;\n    }\n\n    &:not(:last-child) {\n      margin-right: 3px;\n    }\n  }\n\n  &__label {\n  }\n}\n","@use '../colors';\n\n$text-color: colors.$text-light;\n\n.field-label {\n  color: $text-color;\n  font-size: 12px;\n  line-height: 16px;\n}\n","@use 'sass:map';\n@use 'sass:list';\n@use 'base-colors' as *;\n\n$primary: $dark-green;\n$support: $light-green;\n$text: $black;\n$text-light: rgba($black, 0.5);\n$text-contrast: $white;\n$background: $white;\n$disabled: $gray;\n$dark: $black;\n\n$gradient-colors: (\n  'green':  ($dark-green, $green),\n  'orange': ($orange, $light-orange),\n  'blue':   ($blue, $light-blue),\n);\n\n@function get-gradient-color($color, $position: 'start') {\n  $index: 1;\n\n  @if ($position == 'end') {\n    $index: 2;\n  } @else {\n    // check if position is valid\n    @if ($position != 'start') {\n      @error 'Invalid position';\n    }\n  }\n\n  $colors: map.get($gradient-colors, $color);\n\n  @return list.nth($colors, $index);\n}\n\n@function gradient($color, $degree: 0deg, $stop-1: 0%, $stop-2: 100%) {\n  @if (map.has-key($gradient-colors, $color) == false) {\n    @error 'Can\\'t create gradient for color #{$color}';\n  }\n  \n  $color-1: get-gradient-color($color, 'start');\n  $color-2: get-gradient-color($color, 'end');\n\n  @return linear-gradient($degree, $color-1 $stop-1, $color-2 $stop-2);\n}\n","@use '../colors';\n\n$star-color: colors.$support;\n$star-active-color: colors.$primary;\n\n.rating {\n  display: flex;\n  align-items: center;\n\n  &__stars {\n    display: flex;\n    align-items: center;\n    margin-right: 6px;\n  }\n\n  &__star {\n    fill: $star-color;\n\n    &--active {\n      fill: $star-active-color;\n    }\n\n    &:not(:last-child) {\n      margin-right: 2px;\n    }\n  }\n\n  &__value {\n    font-size: 12px;\n    line-height: 16px;\n  }\n}\n","@use '../colors';\n\n$icon-color: colors.$primary;\n$border-color: rgba(colors.$primary, 1);\n$border-hover-color: currentColor;\n\n.comments {\n  $this: &;\n\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    #{$this}__label {\n\n      border-bottom-color: $border-hover-color;\n    }\n  }\n\n  &__icon {\n    margin-right: 8px;\n    fill: $icon-color;\n  }\n\n  &__label {\n    font-size: 12px;\n    line-height: 16px;\n    border-bottom: 1px solid $border-color;\n  }\n}\n","@use '../colors';\n\n$border-color: rgba(colors.$primary, 0.3);\n$border-hover-color: colors.$primary;\n$arrow-color: rgba(colors.$primary, 0.4);\n$option-color: inherit;\n$option-hover-color: colors.$primary;\n$option-selected-color: colors.$support;\n\n.select {\n  display: block;\n  width: 100%;\n  max-width: 100%;\n  padding: 9px 0;\n  border: 0;\n  border-bottom: 1px solid $border-color;\n  background-color: transparent;\n  cursor: pointer;\n  font-size: 14px;\n  line-height: 19px;\n  \n  &:hover,\n  &:focus {\n    border-bottom-color: $border-hover-color;\n    outline: 0;\n  }\n\n  &__option {\n    padding: 9px 15px;\n    color: $option-color;\n    \n    &:hover,\n    &:focus,\n    &:checked {\n      background-color: transparent;\n      color: $option-hover-color\n    }\n\n\n  }\n}",".counter {\n  display: flex;\n\n  &__button {\n    $size: 40px;\n    \n    position: relative;\n    min-width: $size;\n    min-height: $size;\n\n    &--minus::before,\n    &--plus::before,\n    &--plus::after {\n      content: \"\";\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      background-color: currentColor;\n      width: 16px;\n      height: 2px;\n\n      transform: translate(-50%, -50%);\n    }\n\n    &--plus::after {\n      transform: translate(-50%, -50%) rotate(90deg);\n    }\n  }\n\n  &__input {\n    min-width: 0;\n    width: 1ch;\n    box-sizing: content-box;\n    border: 0;\n    padding: 10px;\n    background-color: transparent;\n    font-size: 16px;\n    line-height: 22px;\n  }\n}\n",".product-list {\n\n  &__item {\n    padding: 20px;\n  }\n\n  &__card {\n  }\n}\n","@use '../colors';\n@use '../mixins';\n\n$bg-color: rgba(#f1fff9, 0.5);\n$border-color: rgba(colors.$primary, 0.1);\n$border-hover-color: colors.$primary;\n$title-color: inherit;\n$title-hover-color: colors.$primary;\n\n$props-wrap-screen: 500px;\n\n.product-card {\n  position: relative;\n  padding: 20px;\n  padding-top: 0;\n  border: 1px solid $border-color;\n  background-color: $bg-color;\n  cursor: pointer;\n\n  &:hover {\n    border-color: $border-hover-color;\n  }\n\n  &__header {\n    margin-bottom: 20px;\n\n    @include mixins.media($props-wrap-screen) {\n      display: flex;\n      align-items: center;\n    }\n  }\n\n  &__photo {\n    display: block;\n    margin-left: 10px;\n    margin-top: -26px;\n    margin-bottom: 23px;\n  }\n\n  &__props {\n    margin: 0;\n\n    @include mixins.media($props-wrap-screen) {\n      max-width: 100px;\n      margin: auto;\n    }\n  }\n\n  &__tag-list {\n    position: absolute;\n    top: 20px;\n    left: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    pointer-events: none;\n  }\n\n  &__tag {\n    \n    &:not(:last-child) {\n      margin-bottom: 5px;\n    }\n  }\n\n  &__feedback {\n    display: flex;\n    align-items: center;\n    margin-bottom: 13px;\n  }\n\n  &__rating {\n    margin-right: 30px;\n  }\n\n  &__title {\n    margin-top: 0;\n    margin-bottom: 6px;\n    font-size: 20px;\n    line-height: 27px;\n  }\n\n  &__link {\n    color: $title-color;\n\n    &:hover {\n      color: $title-hover-color;\n    }\n  }\n\n  &__text {\n    margin-top: 0;\n    margin-bottom: 20px;\n    font-size: 12px;\n    line-height: 20px;\n  }\n\n  &__fields {\n    display: flex;\n    margin-bottom: 25px;\n  }\n\n  &__field {\n    position: relative;\n    flex-grow: 1;\n    padding-top: 9px;\n    margin-right: 17px;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n\n  &__field-label {\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n\n  &__cart {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  &__count {\n    margin-right: 1em;\n  }\n\n  &__checkout {\n    display: flex;\n    align-items: center;\n  }\n\n  &__price {\n    font-size: 20px;\n    line-height: 28px;\n    text-align: right;\n    margin-right: 10px;\n\n    @include mixins.media('tablet', 'from') {\n      font-size: 24px;\n      line-height: 33px;\n    }\n  }\n\n  &__submit {\n    $size: 50px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-width: $size;\n    min-height: $size;\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../variables';\n\n@mixin media($screen, $direction: 'from') {\n  @if ($direction != 'from' and $direction != 'to') {\n    @error 'Direction is wrong';\n  }\n \n  $screen-size: $screen;\n\n  @if (meta.type-of($screen) == string) {\n    @if (map.has-key(variables.$screens, $screen)) {\n      $screen-size: map.get(variables.$screens, $screen)\n    } @else {\n      @error 'Screen is wrong';\n    }\n  }\n\n  @if ($direction == 'from') {\n    @media (min-width: $screen-size) {\n      @content;\n    }\n  } @else {\n    @media (max-width: $screen-size - 1) {\n      @content;\n    }\n  }\n}\n"]}